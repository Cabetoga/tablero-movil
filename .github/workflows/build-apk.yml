name: üöÄ Compilar APK Android - Power BI Dashboard

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Permite ejecutar manualmente

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout del c√≥digo
      uses: actions/checkout@v4

    - name: üêç Configurar Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: ‚òï Configurar Java 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: üõ†Ô∏è Instalar dependencias del sistema
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libssl-dev \
          libffi-dev \
          python3-dev \
          git \
          zip \
          unzip \
          autoconf \
          automake \
          m4 \
          libtool \
          libtool-bin \
          libltdl-dev \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo6 \
          cmake \
          make \
          g++ \
          patch \
          xz-utils \
          file \
          gettext \
          texinfo \
          autotools-dev \
          aclocal \
          autogen

    - name: üîß Configurar autotools y libtool correctamente
      run: |
        # Instalar versiones m√°s recientes de autotools si est√°n disponibles
        sudo apt-get install -y autoconf-archive

        # Regenerar autotools completamente
        sudo autoreconf --install --force --verbose || true

        # Configurar variables de entorno para autotools y libtool
        export ACLOCAL_PATH="/usr/share/aclocal:/usr/local/share/aclocal:$ACLOCAL_PATH"
        export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig:/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
        export LIBTOOL_PATH="/usr/bin/libtool"
        export M4PATH="/usr/share/aclocal"

        # Asegurar que las macros de libtool est√©n disponibles
        aclocal --print-ac-dir
        ls -la /usr/share/aclocal/ | grep -E "(libtool|lt)"

        # Configurar para que buildozer use herramientas del sistema
        echo "ACLOCAL_PATH=/usr/share/aclocal:/usr/local/share/aclocal:$ACLOCAL_PATH" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig:/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
        echo "LIBTOOL_PATH=/usr/bin/libtool" >> $GITHUB_ENV
        echo "M4PATH=/usr/share/aclocal" >> $GITHUB_ENV

    - name: üì¶ Instalar dependencias Python
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel cython
        pip install kivy[base]==2.1.0
        pip install kivymd==1.2.0
        pip install pandas requests cryptography
        pip install buildozer==1.5.0
        pip install --upgrade sh colorama appdirs six

    - name: üîß Configurar variables de entorno para Android
      run: |
        echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "PATH=$PATH:$HOME/.buildozer/android/platform/android-sdk/platform-tools" >> $GITHUB_ENV

    - name: üì± Configurar Android SDK (cache)
      uses: actions/cache@v3
      with:
        path: |
          ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-

    - name: üîß Preparar buildozer
      run: |
        mkdir -p ~/.buildozer
        # Limpiar compilaciones anteriores
        buildozer android clean || true
        # Configurar permisos
        chmod +x buildozer.spec

    - name: üöÄ Compilar APK (con manejo de errores mejorado)
      run: |
        # Configurar variables de entorno espec√≠ficas para autotools y libtool
        export ACLOCAL_PATH="/usr/share/aclocal:/usr/local/share/aclocal:$ACLOCAL_PATH"
        export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig:/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
        export LIBTOOL_PATH="/usr/bin/libtool"
        export M4PATH="/usr/share/aclocal"
        export AUTOCONF_VERSION="2.71"
        export AUTOMAKE_VERSION="1.16"

        # Verificar que las macros de libtool est√©n disponibles antes de compilar
        echo "üîç Verificando disponibilidad de macros de libtool:"
        if [ -f "/usr/share/aclocal/libtool.m4" ]; then
          echo "‚úÖ libtool.m4 disponible"
        else
          echo "‚ùå libtool.m4 NO disponible - instalando..."
          sudo apt-get install -y libtool autoconf-archive
        fi

        # Configurar buildozer para usar herramientas del sistema
        export BUILDOZER_AUTOTOOLS_REGEN=1

        # Intentar compilaci√≥n con reintentos para errores de autotools
        for i in {1..3}; do
          echo "üî® Intento de compilaci√≥n #$i"
          if buildozer android debug -v; then
            echo "‚úÖ Compilaci√≥n exitosa en intento #$i"
            break
          else
            echo "‚ùå Error en intento #$i, reintentando..."
            # Limpiar completamente para siguiente intento
            buildozer android clean || true
            rm -rf .buildozer/android/platform/python-for-android/dist || true
            sleep 15
          fi
        done

    - name: üì¶ Subir APK como artefacto
      uses: actions/upload-artifact@v4
      with:
        name: PowerBI-Dashboard-APK
        path: bin/*.apk
        retention-days: 30

    - name: üìä Informaci√≥n del APK
      run: |
        echo "üì± APK compilado exitosamente!"
        ls -la bin/
        echo "üì¶ Tama√±o del APK:"
        du -h bin/*.apk
        echo "üéØ Para descargar:"
        echo "   1. Ir a la pesta√±a 'Actions' en GitHub"
        echo "   2. Hacer clic en esta ejecuci√≥n"
        echo "   3. Descargar 'PowerBI-Dashboard-APK'"
        echo "   4. Extraer el archivo APK"
        echo "   5. ¬°Instalar en el celular!"
